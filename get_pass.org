# -*- mode:org; coding: utf-8; -*-
#+TITLE: get_pass
#+AUTHOR: Pradyumna Paranjape
#+EMAIL: pradyparanjpe@rediffmail.com
#+LANGUAGE: en
#+OPTIONS: toc:2 num:nil html-postamble:nil ^:nil mathjax:t TeX:t ::t tags:nil *:t skip:t
#+PROPERTY: header-args  :tangle pss/bin/get_pass :exports none
#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup
#+EXPORT_FILE_NAME: docs/get_pass.html


* NAME
get_pass - update password_store, fetch password.

* SYNOPSIS
get_pass -h

get_pass --help

get_pass [Optional Arguments*] [INSTANCE]

* DESCRIPTION
Update password store git repository, then, fetch password from password-store.
If instance is not provided, list available instances.


** Optional Arguments
-h               print usage message and exit

--help           print this help message and exit

--<passargs>     all passargs are passed to =pass=.

** Optional Positional Argument:
INSTANCE    fetch password from password store for INSTANCE

* SEE ALSO
- pass

#+begin_src sh :shebang #!/usr/bin/env sh
  # -*- coding: utf-8; mode: shell-script -*-
  #
  # Copyright 2021, 2022 Pradyumna Paranjape
  # This file is part of Prady_sh_scripts.
  #
  # Prady_sh_scripts is free software: you can redistribute it and/or modify
  # it under the terms of the GNU Lesser General Public License as published by
  # the Free Software Foundation, either version 3 of the License, or
  # (at your option) any later version.
  #
  # Prady_sh_scripts is distributed in the hope that it will be useful,
  # but WITHOUT ANY WARRANTY; without even the implied warranty of
  # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  # GNU Lesser General Public License for more details.
  #
  # You should have received a copy of the GNU Lesser General Public License
  # along with Prady_sh_scripts.  If not, see <https://www.gnu.org/licenses/>.


  # This serves as a helper script for providing secrets


  # shellcheck disable=SC1091
  . "$(dirname "${0}")/../lib/common" || exit 127


  set_vars () {
      instance=
      usage="
      usage: ${0} -h
      usage: ${0} --help
      usage: ${0} [Optional Arguments*] [INSTANCE]
  "
      help_msg="${usage}

      DESCRIPTION:
      Update password store git repository, then,
      Fetch password from password-store.


      Optional Arguments:
      -h\t\t\tprint usage message and exit
      --help\t\tprint this help message and exit
      --<passargs>\tall passargs are passed to =pass=.

      Optional Positional Argument:
      INSTANCE\tfetch password from password store for INSTANCE
  "
      load_default_config || true
  }

  unset_vars() {
      unset help_msg
      unset usage
      unset instance
  }

  fail () {
      printf " failed"
      clean_exit 1 "failed: %s\n" "${1}"
  }

  cli () {
      while [ $# -gt 0 ]; do
          case "${1}" in
              -h)
                  # shellcheck disable=SC2059
                  clean_exit 0 "${usage}"
                  ;;
              --help)
                  # shellcheck disable=SC2059
                  clean_exit 0 "${help_msg}"
                  ;;
              ,*)
                  if [ -z "${instance}" ]; then
                      instance="${1}"
                  else
                      instance="${instance} ${1}"
                  fi
                  shift
                  ;;
          esac
      done
      if [ -z "${instance}" ]; then
          pass list
          clean_exit 0 "\nSpecify one of above instances"
      fi
  }

  git_pass () {
      git -C "${PASSWORD_STORE_DIR:-${HOME}/.password-store}" pull \
          1>/dev/null 2>&1
      pass show ${instance}
  }

  main() {
      check_dependencies "pass" "git"
      set_vars
      cli "$@"
      git_pass
      clean_exit
  }

  main "$@"
#+end_src
